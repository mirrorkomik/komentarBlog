name: Moderasi Komentar Giscus

on:
  discussion_comment:
    types: [created]

jobs:
  moderasi:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Data
        id: data
        run: |
          echo "AUTHOR=${{ github.event.comment.user.login }}" >> $GITHUB_ENV
          echo "COMMENT=${{ github.event.comment.body }}" >> $GITHUB_ENV
          echo "DISCUSSION_NUMBER=${{ github.event.discussion.number }}" >> $GITHUB_ENV
          echo "COMMENT_ID=${{ github.event.comment.id }}" >> $GITHUB_ENV
          echo "TITLE=${{ github.event.discussion.title }}" >> $GITHUB_ENV

      - name: Lock Diskusi
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.discussions.lock({
              discussion_number: context.payload.discussion.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              lock_reason: "pending moderation"
            });

      - name: Filter Moderasi (Whitelist & Badword)
        id: filter
        run: |
          # Whitelist user & kata
          WHITELIST_USER="adminuser1,adminuser2"
          WHITELIST_WORDS="mantap,terima kasih,approved"

          BADWORDS="anjing,bangsat,kontol,idiot"

          AUTHOR="${AUTHOR}"
          COMMENT="${COMMENT}"

          # Cek whitelist user
          if echo "$WHITELIST_USER" | grep -iq "$AUTHOR"; then
            echo "status=approve" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Cek whitelist kata
          for word in $(echo $WHITELIST_WORDS | tr ',' ' '); do
            if echo "$COMMENT" | grep -iq "$word"; then
              echo "status=approve" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          # Cek badword
          for bad in $(echo $BADWORDS | tr ',' ' '); do
            if echo "$COMMENT" | grep -iq "$bad"; then
              echo "status=reject" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          # Default: pending
          echo "status=pending" >> $GITHUB_OUTPUT

      - name: Auto Approve Jika Lolos Filter
        if: steps.filter.outputs.status == 'approve'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.discussions.unlock({
              discussion_number: context.payload.discussion.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

      - name: Auto Delete Jika Badword
        if: steps.filter.outputs.status == 'reject'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.discussionComments.deleteComment({
              discussion_comment_id: context.payload.comment.id,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

      - name: Kirim Telegram Jika Pending
        if: steps.filter.outputs.status == 'pending'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          APPROVE_LINK="https://github.com/${{ github.repository }}/actions/workflows/moderasi-aksi.yml/dispatches?inputs[action]=approve&inputs[discussion_number]=${DISCUSSION_NUMBER}&inputs[comment_id]=${COMMENT_ID}"
          DELETE_LINK="https://github.com/${{ github.repository }}/actions/workflows/moderasi-aksi.yml/dispatches?inputs[action]=delete&inputs[comment_id]=${COMMENT_ID}"

          TEXT="üö® *Moderasi Komentar Baru* üö®

üë§ User: ${AUTHOR}
üìå Diskusi: ${TITLE}

üí¨ Komentar:
${COMMENT}"

          # Inline keyboard dengan Approve & Delete
          KEYBOARD=$(jq -nc --arg approve "$APPROVE_LINK" --arg delete "$DELETE_LINK" \
          '{
            inline_keyboard: [
              [
                {text: "‚úÖ Approve", url: $approve},
                {text: "‚ùå Delete", url: $delete}
              ]
            ]
          }')

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            --data-urlencode "text=$TEXT" \
            -d reply_markup="$KEYBOARD"
