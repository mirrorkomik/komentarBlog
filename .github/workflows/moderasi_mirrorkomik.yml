name: Moderasi Komentar Giscus

on:
  discussion_comment:
    types: [created]

jobs:
  moderasi:
    runs-on: ubuntu-latest
    steps:
      # -----------------------------
      - name: Setup Data
        id: data
        run: |
          # Simpan AUTHOR
          echo "AUTHOR=${{ github.event.comment.user.login }}" >> $GITHUB_ENV

          # Encode komentar ke base64 (aman untuk multiline)
          COMMENT_BASE64=$(echo "${GITHUB_EVENT_PATH}" | jq -r '.comment.body' | base64 -w0)
          echo "COMMENT_BASE64=$COMMENT_BASE64" >> $GITHUB_ENV

          # COMMENT_ID
          echo "COMMENT_ID=${{ github.event.comment.id }}" >> $GITHUB_ENV
      
          # Tentukan DISCUSSION_NUMBER
          if [ "${{ github.event.discussion.number }}" != "" ]; then
            # Root comment
            echo "DISCUSSION_NUMBER=${{ github.event.discussion.number }}" >> $GITHUB_ENV
          else
            # Reply ‚Üí ambil parent comment
            PARENT_ID="${{ github.event.comment.in_reply_to_id }}"
            DISCUSSION_NUMBER=$(gh api repos/${{ github.repository }}/discussion_comments/$PARENT_ID | jq -r '.discussion_url' | sed 's|.*/discussions/||')
            echo "DISCUSSION_NUMBER=$DISCUSSION_NUMBER" >> $GITHUB_ENV
          fi

          # Tentukan TITLE
          if [ "${{ github.event.discussion.title }}" != "" ]; then
            echo "TITLE=${{ github.event.discussion.title }}" >> $GITHUB_ENV
          else
            TITLE=$(gh api repos/${{ github.repository }}/discussions/$DISCUSSION_NUMBER | jq -r '.title')
            echo "TITLE=$TITLE" >> $GITHUB_ENV
          fi

      # -----------------------------
      - name: Debug Variables
        run: |
          echo "AUTHOR=$AUTHOR"
          echo "COMMENT=$COMMENT"
          echo "DISCUSSION_NUMBER=$DISCUSSION_NUMBER"
          echo "COMMENT_ID=$COMMENT_ID"
          echo "TITLE=$TITLE"
          
      # -----------------------------
      - name: Lock Diskusi (Pending) hanya untuk root comment
        if: ${{ github.event.comment.in_reply_to_id == null }}
        uses: actions/github-script@v7
        with:
          script: |
            const discussion_number = parseInt(process.env.DISCUSSION_NUMBER);
            if (!isNaN(discussion_number)) {
              console.log(`Locking discussion #${discussion_number}`);
              try {
                await github.rest.discussions.lock({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  discussion_number,
                  lock_reason: "pending moderation"
                });
              } catch (error) {
                console.log("Lock failed:", error.message);
              }
            } else {
              console.log("No valid discussion_number, skipping lock");
            }

      # -----------------------------
      - name: Filter Moderasi
        id: filter
        run: |
          # Decode COMMENT dulu supaya bisa dipakai filter
          COMMENT=$(echo "$COMMENT_BASE64" | base64 --decode)
          
          # Daftar whitelist user & kata
          WHITELIST_USER="adminuser1,adminuser2"
          WHITELIST_WORDS="mantap,terima kasih,approved"
          BADWORDS="anjing,bangsat,kontol,idiot"

          # Ubah komentar jadi lowercase supaya case-insensitive
          COMMENT_LOWER=$(echo "$COMMENT" | tr '[:upper:]' '[:lower:]')
          AUTHOR_LOWER=$(echo "$AUTHOR" | tr '[:upper:]' '[:lower:]')
          
          # Whitelist user
          for user in $(echo $WHITELIST_USER | tr ',' ' '); do
            if [ "$AUTHOR_LOWER" = "$user" ]; then
              echo "status=approve" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          # Whitelist kata
          for word in $(echo $WHITELIST_WORDS | tr ',' ' '); do
            if echo "$COMMENT_LOWER" | grep -q "$word"; then
              echo "status=approve" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          # Badword ‚Üí reject
          for bad in $(echo $BADWORDS | tr ',' ' '); do
            if echo "$COMMENT_LOWER" | grep -q "$bad"; then
              echo "status=reject" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          # Default: pending
          echo "status=pending" >> $GITHUB_OUTPUT

      # -----------------------------
      - name: Auto Approve (Root Comment Only)
        if: steps.filter.outputs.status == 'approve' && github.event.comment.in_reply_to_id == null
        uses: actions/github-script@v7
        with:
          script: |
            const discussion_number = parseInt(process.env.DISCUSSION_NUMBER);
            if (!isNaN(discussion_number)) {
              // Root comment ‚Üí unlock
              console.log(`Unlocking discussion #${discussion_number}`);
              try {
                await github.rest.discussions.unlock({
                  discussion_number: discussion_number,
                  owner: context.repo.owner,
                  repo: context.repo.repo
                });
              } catch (error) {
                  console.log("Auto approve failed:", error.message);
              }
            } else {
              // Reply comment ‚Üí skip unlock
              console.log("No valid discussion_number, skipping unlock");
            }

      # -----------------------------
      - name: Auto Delete (Semua Comment)
        if: steps.filter.outputs.status == 'reject'
        uses: actions/github-script@v7
        with:
          script: |
            const comment_id = parseInt(process.env.COMMENT_ID);
            if (!isNaN(comment_id)) {
              console.log(`Deleting comment ID ${comment_id}`);
              await github.rest.discussionComments.deleteComment({
                  discussion_comment_id: comment_id,
                  owner: context.repo.owner,
                  repo: context.repo.repo
              });
            } else {
              console.log("No valid comment_id, cannot delete");
            }

      # -----------------------------
      - name: Kirim Telegram (Pending)
        if: steps.filter.outputs.status == 'pending'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # Decode COMMENT sebelum dikirim
          COMMENT=$(echo "$COMMENT_BASE64" | base64 --decode)
          
          REPO="${{ github.repository }}"
          DISCUSSION_URL="https://github.com/$REPO/discussions/${DISCUSSION_NUMBER}#discussioncomment-${COMMENT_ID}"

          # Ambil maksimal 4000 karakter
          COMMENT_TRIMMED=$(echo "$COMMENT" | cut -c1-4000)
          
          # Escape karakter spesial MarkdownV2 secara manual
          SAFE_COMMENT=$(echo "$COMMENT_TRIMMED" | sed -e 's/\\/\\\\/g' \
                                                      -e 's/_/\\_/g' \
                                                      -e 's/\*/\\*/g' \
                                                      -e 's/\[/\\[/g' \
                                                      -e 's/\]/\\]/g' \
                                                      -e 's/(/\\(/g' \
                                                      -e 's/)/\\)/g' \
                                                      -e 's/~ /\\~/g' \
                                                      -e 's/`/\\`/g' \
                                                      -e 's/>/\\>/g' \
                                                      -e 's/#/\\#/g' \
                                                      -e 's/\+/\\+/g' \
                                                      -e 's/-/\\-/g' \
                                                      -e 's/=/\\=/g' \
                                                      -e 's/|/\\|/g' \
                                                      -e 's/{/\\{/g' \
                                                      -e 's/}/\\}/g' \
                                                      -e 's/\./\\./g' \
                                                      -e 's/!/\\!/g')
          
          NL=$'\n'
          TEXT="üö® *Moderasi Komentar Baru* üö®${NL}${NL}üë§ User: ${AUTHOR}${NL}üìå Diskusi: ${TITLE}${NL}${NL}üí¨ Komentar:${NL}${SAFE_COMMENT}"

          # Buat URL reject sepenuhnya di Bash
          URL_REJECT="https://github.com/$REPO/actions/workflows/moderasi_manual.yml/dispatches?comment_id=$COMMENT_ID&action=delete"
          
          # Inline button JSON (aman via jq)
          BUTTONS=$(jq -nc --arg approve "‚úÖ Approve" \
                           --arg reject "‚ùå Delete" \
                           --arg urlApprove "$DISCUSSION_URL" \
                           --arg urlReject "$URL_REJECT" \
                           '[[{"text":$approve,"url":$urlApprove},{"text":$reject,"url":$urlReject}]]')

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            --data-urlencode "text=$TEXT" \
            --data-urlencode "reply_markup={\"inline_keyboard\":$BUTTONS}"
            
